/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DisasterVictimRegistry;

import Business.DisasterRegistry.DisasterVictim;
import Business.DisasterRegistry.DisasterVictim.NationalityType;
import Business.Employee.Employee;
import Business.Organization.DisasterVictimOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.WorkQueue;
import java.awt.CardLayout;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author mamta
 */
public class CreateVictimJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateVictimJPanel
     */
    JPanel userProcessContainer;
    DisasterVictimOrganization organization;
    public File file;

    //DisasterVictim disasterVictim = new DisasterVictim();
    //DisasterRegistryWorkRequest drwr = new DisasterRegistryWorkRequest();
    public CreateVictimJPanel(JPanel userProcessContainer, DisasterVictimOrganization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        populateVictimCombo();
        populateNationalityCombo();
    }

    public void populateVictimCombo() {
        victimCombo.removeAllItems();
        victimCombo.addItem("Victim");
        victimCombo.addItem("Missing Person");
    }

    public void populateNationalityCombo() {
        nationalityCombo.removeAllItems();
        for(NationalityType type: DisasterVictim.NationalityType.values()) {
            nationalityCombo.addItem(type);
        }  
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        nameTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ageTxt = new javax.swing.JTextField();
        imgTxt = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        imgBtn = new javax.swing.JButton();
        lbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        contactTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        victimCombo = new javax.swing.JComboBox();
        rdbMale = new javax.swing.JRadioButton();
        rdbFemale = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nationalityCombo = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 253, 208));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nameTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtActionPerformed(evt);
            }
        });
        add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 85, 160, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Name:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 88, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Age:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 122, -1, -1));

        gender.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        gender.setText("Gender:");
        add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 164, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Photo:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 371, -1, -1));

        ageTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ageTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTxtActionPerformed(evt);
            }
        });
        add(ageTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 119, 160, -1));

        imgTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        imgTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgTxtActionPerformed(evt);
            }
        });
        add(imgTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 368, 160, -1));

        saveBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 488, 87, 42));

        imgBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        imgBtn.setText("Upload Image");
        imgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgBtnActionPerformed(evt);
            }
        });
        add(imgBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 409, -1, -1));
        add(lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 340, 177, 138));

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setText("< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 488, 87, 42));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Nationality:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 291, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Address:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 247, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Contact:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 206, -1, -1));

        contactTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        contactTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactTxtActionPerformed(evt);
            }
        });
        add(contactTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 203, 160, -1));

        addressTxt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addressTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTxtActionPerformed(evt);
            }
        });
        add(addressTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 244, 160, -1));

        victimCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        victimCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        victimCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                victimComboActionPerformed(evt);
            }
        });
        add(victimCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 322, -1, -1));

        rdbMale.setBackground(new java.awt.Color(214, 217, 224));
        genderGroup.add(rdbMale);
        rdbMale.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbMale.setText("Male");
        add(rdbMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 160, -1, -1));

        rdbFemale.setBackground(new java.awt.Color(214, 217, 224));
        genderGroup.add(rdbFemale);
        rdbFemale.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbFemale.setText("Female");
        add(rdbFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 160, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Victim Type:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 325, -1, -1));
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 47, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("CREATE VICTIM REGISTRY");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, 41));

        nationalityCombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nationalityCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(nationalityCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 288, 160, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void nameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtActionPerformed

    private void ageTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTxtActionPerformed

    private void imgTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imgTxtActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        //WorkQueue wq = organization.getWorkQueue();
        boolean allowSave = true;

        allowSave = validateInputFields();

        if (allowSave) {
            String gender = "";
            if (genderGroup.getSelection().equals(rdbMale.getModel())) {
                gender = "Male";
            } else if (genderGroup.getSelection().equals(rdbFemale.getModel())) {
                gender = "Female";
            }
            long contact = Long.parseLong(contactTxt.getText());
            String address = addressTxt.getText();
            String nationality = nationalityCombo.getSelectedItem().toString();
            String type = victimCombo.getSelectedItem().toString();

            //System.out.println(gender);
            organization.getDisasterVictimDirectory().createVictimRegistry(nameTxt.getText(), Integer.parseInt(ageTxt.getText()), gender, contact, address, nationality, file, type);
            JOptionPane.showMessageDialog(null, "Details saved successfully");
            // wq.getWorkRequestList().add(disasterVictim);
        }


    }//GEN-LAST:event_saveBtnActionPerformed

    public boolean validateInputFields() {
        boolean allowSave = true;

        if (nameTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name is required");
            return false;
        } else {
            allowSave = validateStrings(nameTxt.getText());
        }

        if (ageTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Age is required");
            return false;
        } else if (ageTxt.getText().matches("[0-9]+") == false) {
            JOptionPane.showMessageDialog(this, "Please enter a valid age.");
            return false;
        }

        if (genderGroup.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "Gender is required");
            return false;
        }

        if (contactTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Contact Number is required.");
            return false;
        } else if (contactTxt.getText().matches("[0-9]+") == false) {
            JOptionPane.showMessageDialog(this, "Please enter a valid contact number.");
            return false;
        } else if (contactTxt.getText().length() < 10) {
            JOptionPane.showMessageDialog(this, "Contact Number should be atleast 10 digits.");
            return false;
        }
        
        if(addressTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Address is required.");
            return false;
        }
        
        if(victimCombo.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "Select type of Victim.");
            return false;
        }

        if(nationalityCombo.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "Select nationality of Victim.");
            return false;
        }
        
        return allowSave;
    }

    public boolean validateStrings(String name) {
        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter mandatory value", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        Pattern pattern = Pattern.compile("[a-zA-Z ]*");
        Matcher matcher = pattern.matcher(name);
        if (!matcher.matches()) {

            JOptionPane.showMessageDialog(null, "Please enter valid string value", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }


    private void imgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        file = chooser.getSelectedFile();
        String fileText = file.getAbsolutePath();
        imgTxt.setText(fileText);
        try {
            BufferedImage img = ImageIO.read(new File(file.getAbsolutePath()));
            ImageIcon image = new ImageIcon(scaleImage(232, 165, img));//get the image from file chooser and scale it to match JLabel size

            lbl.setIcon(image);
        } catch (Exception ex) {
        }
    }

    public static BufferedImage scaleImage(int width, int height, BufferedImage img) throws Exception {
        BufferedImage bufferImage = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D grahpicImage = (Graphics2D) bufferImage.createGraphics();
        grahpicImage.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        grahpicImage.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        grahpicImage.drawImage(img, 0, 0, width, height, null);
        grahpicImage.dispose();
        return bufferImage;
    }//GEN-LAST:event_imgBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void contactTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactTxtActionPerformed

    private void addressTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTxtActionPerformed

    private void victimComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_victimComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_victimComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTxt;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JTextField contactTxt;
    private javax.swing.JLabel gender;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JButton imgBtn;
    private javax.swing.JTextField imgTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JComboBox nationalityCombo;
    private javax.swing.JRadioButton rdbFemale;
    private javax.swing.JRadioButton rdbMale;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox victimCombo;
    // End of variables declaration//GEN-END:variables
}
