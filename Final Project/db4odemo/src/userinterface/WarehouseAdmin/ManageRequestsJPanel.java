/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.WarehouseAdmin;

import userinterface.ShelterOrgAdmin.*;
import Business.Enterprise.Enterprise;
import Business.Items.Item;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HousingWorkRequest;
import Business.WorkQueue.WarehouseRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prathamesh Tambe
 */
public class ManageRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private WarehouseOrganization org;
    private UserAccount account;

    /**
     * Creates new form ManageRequestsJPanel
     */
    public ManageRequestsJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        
        populateJTable();
    }

    public void populateJTable() {

        DefaultTableModel model = (DefaultTableModel) requestsJTable.getModel();
        model.setRowCount(0);

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof WarehouseOrganization) {
                this.org = (WarehouseOrganization) org;
                for (WorkRequest req : org.getWorkQueue().getWorkRequestList()) {
                    Object[] row = new Object[model.getColumnCount()];
                    row[0] = req;
                    row[1] = ((WarehouseRequest) req).getQty();
                    row[2] = req.getReceiver();
                    row[3] = req.getSender();
                    row[4] = req.getRequestDate();
                    row[5] = req.getStatus();
                    row[6] = req.getResolveDate();
                    row[7] = ((WarehouseRequest) req).getRemaining();
                    model.addRow(row);
                }

            }      
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestsJTable = new javax.swing.JTable();
        approveButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("MANAGE REQUESTS FOR WAREHOUSE ADMIN");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, 41));

        requestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Type", "Quantity", "Receiver", "Sender", "Request Date", "Status", "Approved Date", "Remaining"
            }
        ));
        jScrollPane1.setViewportView(requestsJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 930, 170));

        approveButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        approveButton.setText("Approve Request");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });
        add(approveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 360, 210, 40));

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backJButton.setText("<<BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 520, 170, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

        Component[] components = userProcessContainer.getComponents();
        for (Component component : components) {
            if (component instanceof ManageItemsJPanel) {
                ManageItemsJPanel items = (ManageItemsJPanel) component;
                items.populateTable();
            }
        }
    }//GEN-LAST:event_backJButtonActionPerformed

    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
        // TODO add your handling code here:
        
        if(!requestsJTable.getValueAt(requestsJTable.getSelectedRow(), 5).toString().equals("Approved")) {
             if (requestsJTable.getSelectedRow() >= 0) {
            WorkRequest req = (WarehouseRequest) requestsJTable.getValueAt(requestsJTable.getSelectedRow(), 0);
            req.setReceiver(account);
            req.setStatus("Approved");
            req.setResolveDate(new Date());
            ((WarehouseRequest)req).setRemaining(((WarehouseRequest)req).getRemaining() - (Integer)requestsJTable.getValueAt(requestsJTable.getSelectedRow(), 1));
            populateJTable();
        }
        else {
            JOptionPane.showMessageDialog(this, "Please select an item");        
        }
        }
        else {
            JOptionPane.showMessageDialog(this, "Request already approved");
        }
        
       
    }//GEN-LAST:event_approveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestsJTable;
    // End of variables declaration//GEN-END:variables
}
